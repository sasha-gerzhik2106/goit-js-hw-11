{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '46829805-97afaea9a63466d4d0f01977e';\n\nexport function search(element) {\n\tconst url = `${BASE_URL}?key=${KEY}&q=${element}&image_type=photo&orientation=horizontal&safesearch=true`\n\n    return fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n}","export function renderMarkup(arr, galleryEl) {\n    const markup = arr\n      .map(\n        ({\n          webformatURL,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          comments,\n          downloads,\n        }) => {\n          return `\n              <li class=\"gallery-list-item\">\n                  <a class=\"gallery_link\" href=\"${largeImageURL}\">\n                      <img class=\"gallery_img\" src=\"${webformatURL}\" \n                          alt=\"${tags}\" \n                          title=\"${tags}\" />\n                      <ul class=\"statistics-list\">\n                          <li class=\"statistics-item\">\n                              <p class=\"statistics-item_name\">Likes</p>\n                              <p class=\"statistics_result\">${likes}</p>\n                          </li>\n                          <li class=\"statistics-item\">\n                              <p class=\"statistics-item_name\">Views</p>\n                              <p class=\"statistics_result\">${views}</p>\n                          </li>\n                          <li class=\"statistics-item\">\n                              <p class=\"statistics-item_name\">Comments</p>\n                              <p class=\"statistics_result\">${comments}</p>\n                          </li>\n                          <li class=\"statistics-item\">\n                              <p class=\"statistics-item_name\">Downloads</p>\n                              <p class=\"statistics_result\">${downloads}</p>\n                          </li>\n                      </ul>\n                  </a>\n              </li>`;\n        }\n      )\n      .join('');\n    galleryEl.insertAdjacentHTML('afterbegin', markup);\n  }","//library 1\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//library 2\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n//imports from folder JS\nimport { search } from './js/pixabay-api';\nimport { renderMarkup } from './js/render-functions';\n\nconst galleryList = document.querySelector('.gallery-list');\nconst form = document.querySelector('form');\nconst loader = document.querySelector('.loader');\nlet lightbox = new SimpleLightbox('.gallery-list a', {});\n\nfunction elementForSearch() {\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n    const myElement = event.target.elements.choiceSearch.value\n      .toLowerCase()\n      .trim();\n\n    //checking for an empty input\n    if (!myElement) {\n      iziToast.error({ message: 'Please enter a search word.' });\n      return;\n    }else{\n    // clearing past results\n    galleryList.innerHTML = '';\n\t}\n\n\n\n    // Show loading\n    loader.style.display = 'block';\n\n    //запит до pixabay-API\n    search(myElement)\n      .then(element => {\n        //if are not results\n        if (element.hits.length === 0) {\n          iziToast.info({\n            message:\n              'Sorry, there are no images matching your search query. Please try again!',\n          });\n          //markup generation and gallery update\n        } else {\n          renderMarkup(element.hits, galleryList);\n          lightbox.refresh();\n        }\n      })\n      //error checking\n      .catch(error => {\n        iziToast.error({ message: error.message });\n      })\n      .finally(() => {\n        loader.style.display = 'none';\n\t\tform.reset();\n      });\n  });\n\n\n}\n\nelementForSearch();"],"names":["BASE_URL","KEY","search","element","url","response","renderMarkup","arr","galleryEl","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","galleryList","form","loader","lightbox","SimpleLightbox","elementForSearch","event","myElement","iziToast","error"],"mappings":"6vBAAA,MAAMA,EAAW,2BACXC,EAAM,qCAEL,SAASC,EAAOC,EAAS,CAC/B,MAAMC,EAAM,GAAGJ,CAAQ,QAAQC,CAAG,MAAME,CAAO,2DAE5C,OAAO,MAAMC,CAAG,EAAE,KAAKC,GAAY,CACjC,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,CACL,CCZO,SAASC,EAAaC,EAAKC,EAAW,CACzC,MAAMC,EAASF,EACZ,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACV,IACiB;AAAA;AAAA,kDAEiCL,CAAa;AAAA,sDACTD,CAAY;AAAA,iCACjCE,CAAI;AAAA,mCACFA,CAAI;AAAA;AAAA;AAAA;AAAA,6DAIsBC,CAAK;AAAA;AAAA;AAAA;AAAA,6DAILC,CAAK;AAAA;AAAA;AAAA;AAAA,6DAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,6DAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,oBAM/D,EACA,KAAK,EAAE,EACVR,EAAU,mBAAmB,aAAcC,CAAM,CACrD,CC9BA,MAAMQ,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAO,SAAS,cAAc,MAAM,EACpCC,EAAS,SAAS,cAAc,SAAS,EAC/C,IAAIC,EAAW,IAAIC,EAAe,kBAAmB,CAAE,CAAA,EAEvD,SAASC,GAAmB,CAC1BJ,EAAK,iBAAiB,SAAUK,GAAS,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAYD,EAAM,OAAO,SAAS,aAAa,MAClD,YAAa,EACb,OAGH,GAAKC,EAKLP,EAAY,UAAY,OALR,CACdQ,EAAS,MAAM,CAAE,QAAS,6BAA+B,CAAA,EACzD,MACN,CAQIN,EAAO,MAAM,QAAU,QAGvBjB,EAAOsB,CAAS,EACb,KAAKrB,GAAW,CAEXA,EAAQ,KAAK,SAAW,EAC1BsB,EAAS,KAAK,CACZ,QACE,0EACd,CAAW,GAGDnB,EAAaH,EAAQ,KAAMc,CAAW,EACtCG,EAAS,QAAO,EAE1B,CAAO,EAEA,MAAMM,GAAS,CACdD,EAAS,MAAM,CAAE,QAASC,EAAM,OAAS,CAAA,CACjD,CAAO,EACA,QAAQ,IAAM,CACbP,EAAO,MAAM,QAAU,OAC7BD,EAAK,MAAK,CACZ,CAAO,CACP,CAAG,CAGH,CAEAI,EAAkB"}